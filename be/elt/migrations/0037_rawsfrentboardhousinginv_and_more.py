# Generated by Django 4.2.2 on 2023-07-07 02:09

from django.db import migrations, models
import elt.models.model_utils


class Migration(migrations.Migration):
    dependencies = [
        ("elt", "0036_eltanalysis"),
    ]

    operations = [
        migrations.CreateModel(
            name="RawSfRentboardHousingInv",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("run_date", models.DateField()),
                ("parcel_number", models.CharField(blank=True, max_length=254, null=True)),
                (
                    "case_type_name",
                    models.IntegerField(blank=True, choices=[(0, "Housinginventoryunitinformation2023")], null=True),
                ),
                ("unit_number", models.CharField(blank=True, max_length=254, null=True)),
                ("unit_address", models.CharField(blank=True, max_length=254, null=True)),
                (
                    "occupancy_type",
                    models.IntegerField(
                        blank=True,
                        choices=[
                            (0, "Nonresidential"),
                            (1, "Occupiedbynonowner"),
                            (2, "Occupiedbyowner"),
                            (3, "Vacant"),
                        ],
                        null=True,
                    ),
                ),
                (
                    "bedroom_count",
                    models.IntegerField(
                        blank=True,
                        choices=[
                            (0, "Fiveplus"),
                            (1, "Fourbedroom"),
                            (2, "Onebedroom"),
                            (3, "Studio"),
                            (4, "Threebedroom"),
                            (5, "Twobedroom"),
                        ],
                        null=True,
                    ),
                ),
                (
                    "bathroom_count",
                    models.IntegerField(
                        blank=True,
                        choices=[
                            (0, "Oneandahalfbathrooms"),
                            (1, "Onebathroom"),
                            (2, "Sharedbathroomfacilitieswithotherunits"),
                            (3, "Threebathroomsormore"),
                            (4, "Twoandahalfbathrooms"),
                            (5, "Twobathrooms"),
                        ],
                        null=True,
                    ),
                ),
                (
                    "square_footage",
                    models.IntegerField(
                        blank=True,
                        choices=[
                            (0, "A0 250Sqft"),
                            (1, "A1001 1250Sqft"),
                            (2, "A1251 1500Sqft"),
                            (3, "A1501 1750Sqft"),
                            (4, "A1751 2000Sqft"),
                            (5, "A2001 2250Sqft"),
                            (6, "A2251 2500Sqft"),
                            (7, "A2501 2750Sqft"),
                            (8, "A251 500Sqft"),
                            (9, "A2751 3000Sqft"),
                            (10, "A3001 3250Sqft"),
                            (11, "A3251 3500Sqft"),
                            (12, "A3501 3750Sqft"),
                            (13, "A3751 4000Sqft"),
                            (14, "A4000Sqft"),
                            (15, "A4001Sqft"),
                            (16, "A501 750Sqft"),
                            (17, "A751 1000Sqft"),
                            (18, "Unknown"),
                        ],
                        null=True,
                    ),
                ),
                (
                    "monthly_rent",
                    models.IntegerField(
                        blank=True,
                        choices=[
                            (0, "A0Norentpaidbytheoccupant"),
                            (1, "A1 250"),
                            (2, "A1001 1250"),
                            (3, "A1251 1500"),
                            (4, "A1501 1750"),
                            (5, "A1751 2000"),
                            (6, "A2001 2250"),
                            (7, "A2251 2500"),
                            (8, "A250 500"),
                            (9, "A2501 2750"),
                            (10, "A251 500"),
                            (11, "A2751 3000"),
                            (12, "A3001 3250"),
                            (13, "A3251 3500"),
                            (14, "A3501 3750"),
                            (15, "A3751 4000"),
                            (16, "A4001 4250"),
                            (17, "A4251 4500"),
                            (18, "A4501 4750"),
                            (19, "A4751 5000"),
                            (20, "A5001 5250"),
                            (21, "A501 1000"),
                            (22, "A501 750"),
                            (23, "A5251 5500"),
                            (24, "A5501 5750"),
                            (25, "A5751 6000"),
                            (26, "A6001 6250"),
                            (27, "A6251 6500"),
                            (28, "A6501 6750"),
                            (29, "A6751 7000"),
                            (30, "A7000"),
                            (31, "A751 1000"),
                        ],
                        null=True,
                    ),
                ),
                (
                    "base_rentinclude_utility",
                    models.IntegerField(
                        blank=True,
                        choices=[
                            (0, "Watersewer"),
                            (1, "Watersewernaturalgaselectricityrefuserecycling"),
                            (2, "Watersewernaturalgasrefuserecycling"),
                            (3, "Watersewerrefuserecycling"),
                            (4, "Allutilitiesincludedwatersewernaturalgaselectricityrefuserecycling"),
                            (5, "Boilersteamheatwatersewerrefuserecycling"),
                            (6, "Cabletvinternetwatersewernaturalgaselectricityrefuserecycling"),
                            (7, "Cableandinternetwatersewernaturalgaselectricityrefuserecycling"),
                            (9, "Heatwatersewerrefuserecycling"),
                            (10, "Heat"),
                            (11, "Heatfromboilersystemwatersewerrefuserecycling"),
                            (12, "Heatrefuserecycling"),
                            (13, "Heatwatersewerelectricityrefuserecycling"),
                            (14, "Heatwatersewernaturalgaselectricityrefuserecycling"),
                            (15, "Heatwatersewernaturalgasrefuserecycling"),
                            (17, "Heatingwatersewernaturalgasrefuserecycling"),
                            (18, "Hotwater"),
                            (19, "Hotwaterheating"),
                            (20, "Hotwaterheatingwatersewerrefuserecycling"),
                            (21, "Hotwaterwatersewerrefuserecycling"),
                            (22, "Hydronicheatwatersewerrefuserecycling"),
                            (23, "Nawatersewernaturalgaselectricityrefuserecycling"),
                            (24, "Nawatersewernaturalgaselectricityrefuserecycling"),
                            (25, "Nonewatersewerelectricityrefuserecycling"),
                            (26, "Nonewatersewernaturalgasrefuserecycling"),
                            (27, "Nonewatersewerrefuserecycling"),
                            (28, "Parkingwatersewerrefuserecycling"),
                            (29, "Pestcontrolwatersewernaturalgasrefuserecycling"),
                            (30, "Steamheatwatersewerelectricityrefuserecycling"),
                            (31, "Steamheatwatersewernaturalgaselectricityrefuserecycling"),
                            (32, "Steamheatwatersewerrefuserecycling"),
                            (33, "Steamheatingwatersewerrefuserecycling"),
                            (36, "Steamheatwatersewernaturalgasrefuserecycling"),
                            (38, "Wifiwatersewernaturalgaselectricityrefuserecycling"),
                            (39, "Yeswatersewernaturalgaselectricityrefuserecycling"),
                            (40, "Commonusegaselectricity50"),
                            (41, "Commonusegaselectricity50Watersewernaturalgasrefuserecycling"),
                            (42, "Doortodoortrashwatersewernaturalgasrefuserecycling"),
                            (43, "Electricity"),
                            (44, "Electricityother"),
                            (45, "Garagewatersewerrefuserecycling"),
                            (46, "Gasheatercreditwatersewerrefuserecycling"),
                            (52, "Naturalgas"),
                            (53, "Naturalgaselectricity"),
                            (54, "Naturalgaselectricityother"),
                            (55, "Naturalgaselectricityrefuserecycling"),
                            (56, "Naturalgasother"),
                            (57, "Naturalgasrefuserecycling"),
                            (58, "Other"),
                            (59, "Parkingheatwatersewerrefuserecycling"),
                            (61, "Parkingstorageheatwatersewerrefuserecycling"),
                            (63, "Pestcontrolwatersewernaturalgaselectricityrefuserecycling"),
                            (65, "Refuserecycling"),
                            (66, "Refuserecyclingelectricity"),
                            (67, "Refuserecyclingnaturalgas"),
                            (68, "Refuserecyclingnaturalgaselectricity"),
                            (69, "Refuserecyclingnaturalgaselectricityother"),
                            (70, "Refuserecyclingnaturalgasother"),
                            (71, "Refuserecyclingother"),
                            (72, "Sharedgasmeterwatersewerrefuserecycling"),
                            (73, "Steamheat"),
                            (77, "Storageheatwatersewerrefuserecycling"),
                            (79, "Storagewatersewerrefuserecycling"),
                            (81, "Watersewerelectricity"),
                            (82, "Watersewerelectricityother"),
                            (83, "Watersewernaturalgas"),
                            (84, "Watersewernaturalgaselectricity"),
                            (85, "Watersewernaturalgaselectricityother"),
                            (86, "Watersewernaturalgasother"),
                            (87, "Watersewerother"),
                            (89, "Watersewerrefuserecyclingelectricity"),
                            (90, "Watersewerrefuserecyclingelectricityother"),
                            (91, "Watersewerrefuserecyclingnaturalgas"),
                            (92, "Watersewerrefuserecyclingnaturalgaselectricity"),
                            (93, "Watersewerrefuserecyclingnaturalgaselectricityother"),
                            (94, "Watersewerrefuserecyclingnaturalgasother"),
                            (95, "Watersewerrefuserecyclingother"),
                            (97, "Watersewerelectricityrefuserecycling"),
                            (102, "Wifiwatersewernaturalgasrefuserecycling"),
                        ],
                        null=True,
                    ),
                ),
                ("day", models.IntegerField(blank=True, null=True)),
                (
                    "month",
                    models.IntegerField(
                        blank=True,
                        choices=[
                            (0, "April"),
                            (1, "August"),
                            (2, "December"),
                            (3, "February"),
                            (4, "January"),
                            (5, "July"),
                            (6, "June"),
                            (7, "March"),
                            (8, "May"),
                            (9, "Monthunknown"),
                            (10, "November"),
                            (11, "October"),
                            (12, "September"),
                        ],
                        null=True,
                    ),
                ),
                ("year", models.IntegerField(blank=True, null=True)),
                ("past_occupancy", models.IntegerField(blank=True, choices=[(0, "No"), (1, "Yes")], null=True)),
                (
                    "contact_association",
                    models.IntegerField(
                        blank=True,
                        choices=[(0, "Agent"), (1, "Attorney"), (2, "Owner"), (3, "Propertymanager")],
                        null=True,
                    ),
                ),
                ("first_name", models.CharField(blank=True, max_length=254, null=True)),
                ("last_name", models.CharField(blank=True, max_length=254, null=True)),
                ("email", models.CharField(blank=True, max_length=254, null=True)),
                ("phone", models.CharField(blank=True, max_length=254, null=True)),
                ("vacancy_date", models.CharField(blank=True, max_length=254, null=True)),
                (
                    "contact_type",
                    models.IntegerField(
                        blank=True, choices=[(0, "Existing"), (1, "Providecontactdetails")], null=True
                    ),
                ),
                ("signature_date2", models.DateField(blank=True, null=True)),
                ("signature_date1", models.DateField(blank=True, null=True)),
                ("occupancy_or_vacancy", models.CharField(blank=True, max_length=254, null=True)),
            ],
            options={
                "verbose_name": "Raw Sf Rentboard Housing Inv [Excel]",
                "verbose_name_plural": "Raw Sf Rentboard Housing Inv [Excel]",
            },
            bases=(elt.models.model_utils.SanitizedRawModelMixin, models.Model),
        ),
        migrations.AlterModelOptions(
            name="rawsfparcelwrap",
            options={
                "verbose_name": "Raw SF Parcel Wrap [wrapper]",
                "verbose_name_plural": "Raw SF Parcel Wrap [wrapper]",
            },
        ),
    ]
