# Generated by Django 4.2.2 on 2023-07-09 15:55

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    dependencies = [
        ("elt", "0037_rawsfrentboardhousinginv_and_more"),
    ]

    operations = [
        migrations.AddField(
            model_name="rawsfrentboardhousinginv",
            name="rawsfparcelwrap",
            field=models.ForeignKey(
                blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to="elt.rawsfparcelwrap"
            ),
        ),
        migrations.AlterField(
            model_name="rawsfrentboardhousinginv",
            name="base_rentinclude_utility",
            field=models.IntegerField(
                blank=True,
                choices=[
                    (0, "Water Sewer"),
                    (1, "Water Sewer Natural Gas Electricity Refuse Recycling"),
                    (2, "Water Sewer Natural Gas Refuse Recycling"),
                    (3, "Water Sewer Refuse Recycling"),
                    (4, "All Utilities Included Water Sewer Natural Gas Electricity Refuse Recycling"),
                    (5, "Boiler Steam Heat Water Sewer Refuse Recycling"),
                    (6, "Cable Tv Internet Water Sewer Natural Gas Electricity Refuse Recycling"),
                    (7, "Cable And Internet Water Sewer Natural Gas Electricity Refuse Recycling"),
                    (9, "Heat Water Sewer Refuse Recycling"),
                    (10, "Heat"),
                    (11, "Heat From Boiler System Water Sewer Refuse Recycling"),
                    (12, "Heat Refuse Recycling"),
                    (13, "Heat Water Sewer Electricity Refuse Recycling"),
                    (14, "Heat Water Sewer Natural Gas Electricity Refuse Recycling"),
                    (15, "Heat Water Sewer Natural Gas Refuse Recycling"),
                    (17, "Heating Water Sewer Natural Gas Refuse Recycling"),
                    (18, "Hot Water"),
                    (19, "Hot Water Heating"),
                    (20, "Hot Water Heating Water Sewer Refuse Recycling"),
                    (21, "Hot Water Water Sewer Refuse Recycling"),
                    (22, "Hydronic Heat Water Sewer Refuse Recycling"),
                    (23, "N A Water Sewer Natural Gas Electricity Refuse Recycling"),
                    (24, "Na Water Sewer Natural Gas Electricity Refuse Recycling"),
                    (25, "None Water Sewer Electricity Refuse Recycling"),
                    (26, "None Water Sewer Natural Gas Refuse Recycling"),
                    (27, "None Water Sewer Refuse Recycling"),
                    (28, "Parking Water Sewer Refuse Recycling"),
                    (29, "Pest Control Water Sewer Natural Gas Refuse Recycling"),
                    (30, "Steam Heat Water Sewer Electricity Refuse Recycling"),
                    (31, "Steam Heat Water Sewer Natural Gas Electricity Refuse Recycling"),
                    (32, "Steam Heat Water Sewer Refuse Recycling"),
                    (33, "Steam Heating Water Sewer Refuse Recycling"),
                    (36, "Steam Heat Water Sewer Natural Gas Refuse Recycling"),
                    (38, "Wifi Water Sewer Natural Gas Electricity Refuse Recycling"),
                    (39, "Yes Water Sewer Natural Gas Electricity Refuse Recycling"),
                    (40, "Common Use Gas Electricity 50"),
                    (41, "Common Use Gas Electricity 50 Water Sewer Natural Gas Refuse Recycling"),
                    (42, "Door To Door Trash Water Sewer Natural Gas Refuse Recycling"),
                    (43, "Electricity"),
                    (44, "Electricity Other"),
                    (45, "Garage Water Sewer Refuse Recycling"),
                    (46, "Gas Heater Credit Water Sewer Refuse Recycling"),
                    (52, "Natural Gas"),
                    (53, "Natural Gas Electricity"),
                    (54, "Natural Gas Electricity Other"),
                    (55, "Natural Gas Electricity Refuse Recycling"),
                    (56, "Natural Gas Other"),
                    (57, "Natural Gas Refuse Recycling"),
                    (58, "Other"),
                    (59, "Parking Heat Water Sewer Refuse Recycling"),
                    (61, "Parking Storage Heat Water Sewer Refuse Recycling"),
                    (63, "Pest Control Water Sewer Natural Gas Electricity Refuse Recycling"),
                    (65, "Refuse Recycling"),
                    (66, "Refuse Recycling Electricity"),
                    (67, "Refuse Recycling Natural Gas"),
                    (68, "Refuse Recycling Natural Gas Electricity"),
                    (69, "Refuse Recycling Natural Gas Electricity Other"),
                    (70, "Refuse Recycling Natural Gas Other"),
                    (71, "Refuse Recycling Other"),
                    (72, "Shared Gas Meter Water Sewer Refuse Recycling"),
                    (73, "Steam Heat"),
                    (77, "Storage Heat Water Sewer Refuse Recycling"),
                    (79, "Storage Water Sewer Refuse Recycling"),
                    (81, "Water Sewer Electricity"),
                    (82, "Water Sewer Electricity Other"),
                    (83, "Water Sewer Natural Gas"),
                    (84, "Water Sewer Natural Gas Electricity"),
                    (85, "Water Sewer Natural Gas Electricity Other"),
                    (86, "Water Sewer Natural Gas Other"),
                    (87, "Water Sewer Other"),
                    (89, "Water Sewer Refuse Recycling Electricity"),
                    (90, "Water Sewer Refuse Recycling Electricity Other"),
                    (91, "Water Sewer Refuse Recycling Natural Gas"),
                    (92, "Water Sewer Refuse Recycling Natural Gas Electricity"),
                    (93, "Water Sewer Refuse Recycling Natural Gas Electricity Other"),
                    (94, "Water Sewer Refuse Recycling Natural Gas Other"),
                    (95, "Water Sewer Refuse Recycling Other"),
                    (97, "Water Sewer Electricity Refuse Recycling"),
                    (102, "Wifi Water Sewer Natural Gas Refuse Recycling"),
                ],
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="rawsfrentboardhousinginv",
            name="bathroom_count",
            field=models.IntegerField(
                blank=True,
                choices=[
                    (0, "One And A Half Bathrooms"),
                    (1, "One Bathroom"),
                    (2, "Shared Bathroom Facilities With Other Units"),
                    (3, "Three Bathrooms Or More"),
                    (4, "Two And A Half Bathrooms"),
                    (5, "Two Bathrooms"),
                ],
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="rawsfrentboardhousinginv",
            name="bedroom_count",
            field=models.IntegerField(
                blank=True,
                choices=[
                    (0, "Five Plus"),
                    (1, "Four Bedroom"),
                    (2, "One Bedroom"),
                    (3, "Studio"),
                    (4, "Three Bedroom"),
                    (5, "Two Bedroom"),
                ],
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="rawsfrentboardhousinginv",
            name="case_type_name",
            field=models.IntegerField(
                blank=True, choices=[(0, "Housing Inventory Unit Information 2023")], null=True
            ),
        ),
        migrations.AlterField(
            model_name="rawsfrentboardhousinginv",
            name="contact_association",
            field=models.IntegerField(
                blank=True, choices=[(0, "Agent"), (1, "Attorney"), (2, "Owner"), (3, "Property Manager")], null=True
            ),
        ),
        migrations.AlterField(
            model_name="rawsfrentboardhousinginv",
            name="contact_type",
            field=models.IntegerField(
                blank=True, choices=[(0, "Existing"), (1, "Provide Contact Details")], null=True
            ),
        ),
        migrations.AlterField(
            model_name="rawsfrentboardhousinginv",
            name="month",
            field=models.IntegerField(
                blank=True,
                choices=[
                    (0, "April"),
                    (1, "August"),
                    (2, "December"),
                    (3, "February"),
                    (4, "January"),
                    (5, "July"),
                    (6, "June"),
                    (7, "March"),
                    (8, "May"),
                    (9, "Month Unknown"),
                    (10, "November"),
                    (11, "October"),
                    (12, "September"),
                ],
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="rawsfrentboardhousinginv",
            name="monthly_rent",
            field=models.IntegerField(
                blank=True,
                choices=[
                    (0, "A0 No Rent Paid By The Occupant"),
                    (1, "A1 250"),
                    (2, "A1001 1250"),
                    (3, "A1251 1500"),
                    (4, "A1501 1750"),
                    (5, "A1751 2000"),
                    (6, "A2001 2250"),
                    (7, "A2251 2500"),
                    (8, "A250 500"),
                    (9, "A2501 2750"),
                    (10, "A251 500"),
                    (11, "A2751 3000"),
                    (12, "A3001 3250"),
                    (13, "A3251 3500"),
                    (14, "A3501 3750"),
                    (15, "A3751 4000"),
                    (16, "A4001 4250"),
                    (17, "A4251 4500"),
                    (18, "A4501 4750"),
                    (19, "A4751 5000"),
                    (20, "A5001 5250"),
                    (21, "A501 1000"),
                    (22, "A501 750"),
                    (23, "A5251 5500"),
                    (24, "A5501 5750"),
                    (25, "A5751 6000"),
                    (26, "A6001 6250"),
                    (27, "A6251 6500"),
                    (28, "A6501 6750"),
                    (29, "A6751 7000"),
                    (30, "A7000"),
                    (31, "A751 1000"),
                ],
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="rawsfrentboardhousinginv",
            name="occupancy_type",
            field=models.IntegerField(
                blank=True,
                choices=[
                    (0, "Non Residential"),
                    (1, "Occupied By Non Owner"),
                    (2, "Occupied By Owner"),
                    (3, "Vacant"),
                ],
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="rawsfrentboardhousinginv",
            name="square_footage",
            field=models.IntegerField(
                blank=True,
                choices=[
                    (0, "A0 250 Sq Ft"),
                    (1, "A1001 1250 Sq Ft"),
                    (2, "A1251 1500 Sq Ft"),
                    (3, "A1501 1750 Sq Ft"),
                    (4, "A1751 2000 Sq Ft"),
                    (5, "A2001 2250 Sq Ft"),
                    (6, "A2251 2500 Sq Ft"),
                    (7, "A2501 2750 Sq Ft"),
                    (8, "A251 500 Sq Ft"),
                    (9, "A2751 3000 Sq Ft"),
                    (10, "A3001 3250 Sq Ft"),
                    (11, "A3251 3500 Sq Ft"),
                    (12, "A3501 3750 Sq Ft"),
                    (13, "A3751 4000 Sq Ft"),
                    (14, "A4000 Sq Ft"),
                    (15, "A4001 Sq Ft"),
                    (16, "A501 750 Sq Ft"),
                    (17, "A751 1000 Sq Ft"),
                    (18, "Unknown"),
                ],
                null=True,
            ),
        ),
        migrations.AddIndex(
            model_name="rawsfrentboardhousinginv",
            index=models.Index(fields=["parcel_number"], name="elt_rawsfre_parcel__ad29bc_idx"),
        ),
    ]
