# Autogenerated by excel.py
from django.contrib.gis.db import models

from elt.models import RawSfParcelWrap
from elt.models.model_utils import SanitizedRawModelMixin


class RawSfRentboardHousingInv(SanitizedRawModelMixin, models.Model):
    class Meta:
        verbose_name = "Raw Sf Rentboard Housing Inv [Excel]"
        verbose_name_plural = "Raw Sf Rentboard Housing Inv [Excel]"
        indexes = [models.Index(fields=["parcel_number"])]

    class CaseTypeNameEnum(models.IntegerChoices):
        HOUSING_INVENTORY_UNIT_INFORMATION_2023 = 0

    class OccupancyTypeEnum(models.IntegerChoices):
        NON_RESIDENTIAL = 0
        OCCUPIED_BY_NON_OWNER = 1
        OCCUPIED_BY_OWNER = 2
        VACANT = 3

    class BedroomCountEnum(models.IntegerChoices):
        FIVE_PLUS = 0
        FOUR_BEDROOM = 1
        ONE_BEDROOM = 2
        STUDIO = 3
        THREE_BEDROOM = 4
        TWO_BEDROOM = 5

    class BathroomCountEnum(models.IntegerChoices):
        ONE_AND_A_HALF_BATHROOMS = 0
        ONE_BATHROOM = 1
        SHARED_BATHROOM_FACILITIES_WITH_OTHER_UNITS = 2
        THREE_BATHROOMS_OR_MORE = 3
        TWO_AND_A_HALF_BATHROOMS = 4
        TWO_BATHROOMS = 5

    class SquareFootageEnum(models.IntegerChoices):
        A0_250_SQ_FT = 0
        A1001_1250_SQ_FT = 1
        A1251_1500_SQ_FT = 2
        A1501_1750_SQ_FT = 3
        A1751_2000_SQ_FT = 4
        A2001_2250_SQ_FT = 5
        A2251_2500_SQ_FT = 6
        A2501_2750_SQ_FT = 7
        A251_500_SQ_FT = 8
        A2751_3000_SQ_FT = 9
        A3001_3250_SQ_FT = 10
        A3251_3500_SQ_FT = 11
        A3501_3750_SQ_FT = 12
        A3751_4000_SQ_FT = 13
        A4000_SQ_FT = 14
        A4001_SQ_FT = 15
        A501_750_SQ_FT = 16
        A751_1000_SQ_FT = 17
        UNKNOWN = 18

    class MonthlyRentEnum(models.IntegerChoices):
        A0_NO_RENT_PAID_BY_THE_OCCUPANT = 0
        A1_250 = 1
        A1001_1250 = 2
        A1251_1500 = 3
        A1501_1750 = 4
        A1751_2000 = 5
        A2001_2250 = 6
        A2251_2500 = 7
        A250_500 = 8
        A2501_2750 = 9
        A251_500 = 10
        A2751_3000 = 11
        A3001_3250 = 12
        A3251_3500 = 13
        A3501_3750 = 14
        A3751_4000 = 15
        A4001_4250 = 16
        A4251_4500 = 17
        A4501_4750 = 18
        A4751_5000 = 19
        A5001_5250 = 20
        A501_1000 = 21
        A501_750 = 22
        A5251_5500 = 23
        A5501_5750 = 24
        A5751_6000 = 25
        A6001_6250 = 26
        A6251_6500 = 27
        A6501_6750 = 28
        A6751_7000 = 29
        A7000 = 30
        A751_1000 = 31

    class BaseRentincludeUtilityEnum(models.IntegerChoices):
        WATER_SEWER = 0
        WATER_SEWER_NATURAL_GAS_ELECTRICITY_REFUSE_RECYCLING = 1
        WATER_SEWER_NATURAL_GAS_REFUSE_RECYCLING = 2
        WATER_SEWER_REFUSE_RECYCLING = 3
        ALL_UTILITIES_INCLUDED_WATER_SEWER_NATURAL_GAS_ELECTRICITY_REFUSE_RECYCLING = 4
        BOILER_STEAM_HEAT_WATER_SEWER_REFUSE_RECYCLING = 5
        CABLE_TV_INTERNET_WATER_SEWER_NATURAL_GAS_ELECTRICITY_REFUSE_RECYCLING = 6
        CABLE_AND_INTERNET_WATER_SEWER_NATURAL_GAS_ELECTRICITY_REFUSE_RECYCLING = 7
        HEAT_WATER_SEWER_REFUSE_RECYCLING = 9
        HEAT = 10
        HEAT_FROM_BOILER_SYSTEM_WATER_SEWER_REFUSE_RECYCLING = 11
        HEAT_REFUSE_RECYCLING = 12
        HEAT_WATER_SEWER_ELECTRICITY_REFUSE_RECYCLING = 13
        HEAT_WATER_SEWER_NATURAL_GAS_ELECTRICITY_REFUSE_RECYCLING = 14
        HEAT_WATER_SEWER_NATURAL_GAS_REFUSE_RECYCLING = 15
        HEATING_WATER_SEWER_NATURAL_GAS_REFUSE_RECYCLING = 17
        HOT_WATER = 18
        HOT_WATER_HEATING = 19
        HOT_WATER_HEATING_WATER_SEWER_REFUSE_RECYCLING = 20
        HOT_WATER_WATER_SEWER_REFUSE_RECYCLING = 21
        HYDRONIC_HEAT_WATER_SEWER_REFUSE_RECYCLING = 22
        N_A_WATER_SEWER_NATURAL_GAS_ELECTRICITY_REFUSE_RECYCLING = 23
        NA_WATER_SEWER_NATURAL_GAS_ELECTRICITY_REFUSE_RECYCLING = 24
        NONE_WATER_SEWER_ELECTRICITY_REFUSE_RECYCLING = 25
        NONE_WATER_SEWER_NATURAL_GAS_REFUSE_RECYCLING = 26
        NONE_WATER_SEWER_REFUSE_RECYCLING = 27
        PARKING_WATER_SEWER_REFUSE_RECYCLING = 28
        PEST_CONTROL_WATER_SEWER_NATURAL_GAS_REFUSE_RECYCLING = 29
        STEAM_HEAT_WATER_SEWER_ELECTRICITY_REFUSE_RECYCLING = 30
        STEAM_HEAT_WATER_SEWER_NATURAL_GAS_ELECTRICITY_REFUSE_RECYCLING = 31
        STEAM_HEAT_WATER_SEWER_REFUSE_RECYCLING = 32
        STEAM_HEATING_WATER_SEWER_REFUSE_RECYCLING = 33
        STEAM_HEAT_WATER_SEWER_NATURAL_GAS_REFUSE_RECYCLING = 36
        WIFI_WATER_SEWER_NATURAL_GAS_ELECTRICITY_REFUSE_RECYCLING = 38
        YES_WATER_SEWER_NATURAL_GAS_ELECTRICITY_REFUSE_RECYCLING = 39
        COMMON_USE_GAS_ELECTRICITY_50 = 40
        COMMON_USE_GAS_ELECTRICITY_50_WATER_SEWER_NATURAL_GAS_REFUSE_RECYCLING = 41
        DOOR_TO_DOOR_TRASH_WATER_SEWER_NATURAL_GAS_REFUSE_RECYCLING = 42
        ELECTRICITY = 43
        ELECTRICITY_OTHER = 44
        GARAGE_WATER_SEWER_REFUSE_RECYCLING = 45
        GAS_HEATER_CREDIT_WATER_SEWER_REFUSE_RECYCLING = 46
        NATURAL_GAS = 52
        NATURAL_GAS_ELECTRICITY = 53
        NATURAL_GAS_ELECTRICITY_OTHER = 54
        NATURAL_GAS_ELECTRICITY_REFUSE_RECYCLING = 55
        NATURAL_GAS_OTHER = 56
        NATURAL_GAS_REFUSE_RECYCLING = 57
        OTHER = 58
        PARKING_HEAT_WATER_SEWER_REFUSE_RECYCLING = 59
        PARKING_STORAGE_HEAT_WATER_SEWER_REFUSE_RECYCLING = 61
        PEST_CONTROL_WATER_SEWER_NATURAL_GAS_ELECTRICITY_REFUSE_RECYCLING = 63
        REFUSE_RECYCLING = 65
        REFUSE_RECYCLING_ELECTRICITY = 66
        REFUSE_RECYCLING_NATURAL_GAS = 67
        REFUSE_RECYCLING_NATURAL_GAS_ELECTRICITY = 68
        REFUSE_RECYCLING_NATURAL_GAS_ELECTRICITY_OTHER = 69
        REFUSE_RECYCLING_NATURAL_GAS_OTHER = 70
        REFUSE_RECYCLING_OTHER = 71
        SHARED_GAS_METER_WATER_SEWER_REFUSE_RECYCLING = 72
        STEAM_HEAT = 73
        STORAGE_HEAT_WATER_SEWER_REFUSE_RECYCLING = 77
        STORAGE_WATER_SEWER_REFUSE_RECYCLING = 79
        WATER_SEWER_ELECTRICITY = 81
        WATER_SEWER_ELECTRICITY_OTHER = 82
        WATER_SEWER_NATURAL_GAS = 83
        WATER_SEWER_NATURAL_GAS_ELECTRICITY = 84
        WATER_SEWER_NATURAL_GAS_ELECTRICITY_OTHER = 85
        WATER_SEWER_NATURAL_GAS_OTHER = 86
        WATER_SEWER_OTHER = 87
        WATER_SEWER_REFUSE_RECYCLING_ELECTRICITY = 89
        WATER_SEWER_REFUSE_RECYCLING_ELECTRICITY_OTHER = 90
        WATER_SEWER_REFUSE_RECYCLING_NATURAL_GAS = 91
        WATER_SEWER_REFUSE_RECYCLING_NATURAL_GAS_ELECTRICITY = 92
        WATER_SEWER_REFUSE_RECYCLING_NATURAL_GAS_ELECTRICITY_OTHER = 93
        WATER_SEWER_REFUSE_RECYCLING_NATURAL_GAS_OTHER = 94
        WATER_SEWER_REFUSE_RECYCLING_OTHER = 95
        WATER_SEWER_ELECTRICITY_REFUSE_RECYCLING = 97
        WIFI_WATER_SEWER_NATURAL_GAS_REFUSE_RECYCLING = 102

    class MonthEnum(models.IntegerChoices):
        APRIL = 0
        AUGUST = 1
        DECEMBER = 2
        FEBRUARY = 3
        JANUARY = 4
        JULY = 5
        JUNE = 6
        MARCH = 7
        MAY = 8
        MONTH_UNKNOWN = 9
        NOVEMBER = 10
        OCTOBER = 11
        SEPTEMBER = 12

    class PastOccupancyEnum(models.IntegerChoices):
        NO = 0
        YES = 1

    class ContactAssociationEnum(models.IntegerChoices):
        AGENT = 0
        ATTORNEY = 1
        OWNER = 2
        PROPERTY_MANAGER = 3

    class ContactTypeEnum(models.IntegerChoices):
        EXISTING = 0
        PROVIDE_CONTACT_DETAILS = 1

    run_date = models.DateField()
    parcel_number = models.CharField(max_length=254, null=True, blank=True)
    case_type_name = models.IntegerField(choices=CaseTypeNameEnum.choices, null=True, blank=True)
    unit_number = models.CharField(max_length=254, null=True, blank=True)
    unit_address = models.CharField(max_length=254, null=True, blank=True)
    occupancy_type = models.IntegerField(choices=OccupancyTypeEnum.choices, null=True, blank=True)
    bedroom_count = models.IntegerField(choices=BedroomCountEnum.choices, null=True, blank=True)
    bathroom_count = models.IntegerField(choices=BathroomCountEnum.choices, null=True, blank=True)
    square_footage = models.IntegerField(choices=SquareFootageEnum.choices, null=True, blank=True)
    monthly_rent = models.IntegerField(choices=MonthlyRentEnum.choices, null=True, blank=True)
    base_rentinclude_utility = models.IntegerField(choices=BaseRentincludeUtilityEnum.choices, null=True, blank=True)
    day = models.IntegerField(null=True, blank=True)
    month = models.IntegerField(choices=MonthEnum.choices, null=True, blank=True)
    year = models.IntegerField(null=True, blank=True)
    past_occupancy = models.IntegerField(choices=PastOccupancyEnum.choices, null=True, blank=True)
    contact_association = models.IntegerField(choices=ContactAssociationEnum.choices, null=True, blank=True)
    first_name = models.CharField(max_length=254, null=True, blank=True)
    last_name = models.CharField(max_length=254, null=True, blank=True)
    email = models.CharField(max_length=254, null=True, blank=True)
    phone = models.CharField(max_length=254, null=True, blank=True)
    vacancy_date = models.CharField(max_length=254, null=True, blank=True)
    contact_type = models.IntegerField(choices=ContactTypeEnum.choices, null=True, blank=True)
    signature_date2 = models.DateField(null=True, blank=True)
    signature_date1 = models.DateField(null=True, blank=True)
    occupancy_or_vacancy = models.CharField(max_length=254, null=True, blank=True)

    # Manually added field:
    rawsfparcelwrap = models.ForeignKey(RawSfParcelWrap, on_delete=models.PROTECT, null=True, blank=True)
