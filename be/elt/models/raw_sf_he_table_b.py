# Autogenerated by excel.py
from django.contrib.gis.db import models

from elt.models.model_utils import SanitizedRawModelMixin


class RawSfHeTableB(SanitizedRawModelMixin, models.Model):
    class Meta:
        verbose_name = "Raw SF HE Table B [Excel]"
        verbose_name_plural = "Raw SF HE Table B [Excel]"
        indexes = [models.Index(fields=["mapblklot"])]

    class ShortfallEnum(models.IntegerChoices):
        ShortfallOfSites = 0, "Site Shortfall"

    class ExGpTypeEnum(models.IntegerChoices):
        CommunityBusiness = 0, "Comm Biz"
        NeighborhoodCommercialDistrict = 1, "Nghbrhd Comm"
        NeighborhoodCommercialTransitDistrict = 2, "Nghbrhd Comm Transit"
        NeighborhoodCommercialCluster = 3, "Nghbrhd Comm Cluster"
        NeighborhoodCommercialModerateScale = 4, "Nghbrhd Comm Mod Scale"
        NeighborhoodCommercialShoppingCenter = 5, "Nghbrhd Comm Shopping"
        NeighborhoodCommercialSmallScale = 6, "Nghbrhd Comm Small Scale"
        ResidentialTransitOrientedDistrict = (
            7,
            "Resi Transit Orient",
        )
        ResidentialCommercialHighDensity = (
            8,
            "Resi Comm Hi Dens",
        )
        ResidentialCommercialMediumDensity = (
            9,
            "Resi Comm Med Dens",
        )
        ResidentialHouseOneFamily = 10, "Resi 1 Fam"
        ResidentialHouseOneFamilyDetached = 11, "Resi 1 Fam Detach"
        ResidentialHouseOneFamilySecondaryUnit = 12, "Resi 1 Fam Secondary"
        ResidentialHouseThreeFamily = 13, "Resi 3 Fam"
        ResidentialHouseTwoFamily = 14, "Resi 2 Fam"
        ResidentialMixedHighDensity = 15, "Resi Mixed Hi Dens"
        ResidentialMixedLowDensity = 16, "Resi Mixed Lo Dens"
        ResidentialMixedMediumDensity = 17, "Resi Mixed Med Dens"
        ResidentialMixedModerateDensity = 18, "Resi Mixed Mod Dens"

    class ExZoningEnum(models.IntegerChoices):
        C2 = 0
        Nc1 = 1
        Nc2 = 2
        Nc3 = 3
        NcS = 4
        Ncd24thNoeValley = 5
        NcdCastro = 6
        NcdColeValley = 7
        NcdGearyBoulevard = 8
        NcdHaight = 9
        NcdInnerBalboaStreet = 10
        NcdInnerClement = 11
        NcdInnerSunset = 12
        NcdInnerTaravalStreet = 13
        NcdIrving = 14
        NcdJudah = 15
        NcdLakesideVillage = 16
        NcdLowerHaightStreet = 17
        NcdNoriega = 18
        NcdOuterBalboaStreet = 19
        NcdOuterClement = 20
        NcdPacific = 21
        NcdPolk = 22
        NcdSacramento = 23
        NcdTaraval = 24
        NcdUnion = 25
        NcdUpperFillmore = 26
        NcdWestPortal = 27
        Nct3 = 28
        NctDivisadero = 29
        NctFillmore = 30
        NctGlenPark = 31
        NctOcean = 32
        NctUpperMarket = 33
        Rc3 = 34
        Rc4 = 35
        Rh1 = 36
        Rh1D = 37
        Rh1S = 38
        Rh2 = 39
        Rh3 = 40
        Rm1 = 41
        Rm2 = 42
        Rm3 = 43
        Rm4 = 44
        Rto = 45

    class GpTypeEnum(models.IntegerChoices):
        MultiFamilyMixedUse = 0, "MF Mixed"
        MultiFamilyResidential = 1, "MF Resi"

    # class M2ZoningEnum(models.IntegerChoices):
    #     A140HeightAllowed = 0
    #     A240HeightAllowed = 1
    #     A55HeightAllowed = 2
    #     A65HeightAllowed = 3
    #     A85HeightAllowed = 4
    #     IncreasedDensityUpToFourUnitsSixUnitsOnCornerLots = 5
    #
    class ZoningEnum(models.IntegerChoices):
        A140HeightAllowed = 0, "140'"
        A240HeightAllowed = 1, "240'"
        A55HeightAllowed = 2, "55'"
        A65HeightAllowed = 3, "65'"
        A85HeightAllowed = 4, "85'"
        AddedHeightInExistingFormBasedArea = 5, "Added Height Form based"
        IncreasedDensityUpToFourUnitsSixUnitsOnCornerLots = 6, "4-6 Units"
        NoHeightChangeDensityDecontrol = 7, "Density Decontrol"

    class VacantEnum(models.IntegerChoices):
        UnderutilizedPl = 0
        UnderutilizedV = 1
        UnderutilizedVci = 2
        UnderutilizedVg = 3
        UnderutilizedVpub = 4
        UnderutilizedVr = 5
        UnderutilizedVrx = 6

    class ExUseEnum(models.IntegerChoices):
        A1Flat1AptBldg1Parcel = 0, "1 Flat Apt Bldg"
        A1FlatDwelling1Parcel = 1, "1 Flat Dwlng"
        A2DwellingsOn1Parcel4UnitsOrLess = 2, "2 Dwlng 1-4 Units"
        A2DwellingsOn1Parcel5To14Units = 3, "2 Dwlng 5-14 Units"
        Apartment15UnitsOrMore = 4, "Apt 15+ Units"
        Apartment4UnitsOrLess = 5, "Apt 1-4 Units"
        Apartment5To14Units = 6, "Apt 5-14 Units"
        ApartmntCommercialStore = 7, "Apt Comm Store"
        Bank = 8
        ChurchesConventsRectories = 9, "Churches etc"
        ClubsLodgesFraternalOrganizations = 10, "Clubs etc"
        CommercialStores = 11, "Comm Stores"
        CommercialMixedUse = 12, "Comm Mixed Use"
        Condominium = 13, "Condo"
        CondominiumBmr = 14, "Condo BMR"
        ConvalescentNursingHomes = 15, "Convalescent"
        CoopUnitsUnsegregated = 16, "Coop Units"
        Dwelling = 17, "Dwelling"
        DwellingsApt4UnitsOrLess = 18, "Dwlng Apt 1-4 Units"
        FlatStore = 19, "Flat Store"
        FlatStore15Units = 20, "Flat Store 15+ Units"
        FlatStore4UnitsOrLess = 21, "Flat Store 1-4 Units"
        FlatStore5To14Units = 22, "Flat Store 5-14 Units"
        FlatsDuplex = 23, "Flats Duplex"
        Flats5To14Units = 24, "Flats 5-14 Units"
        GaragesCommercial = 25, "Garages Comm"
        GasStation = 26
        Hotel = 27
        HotelsOther = 28
        Industrial = 29
        MedicalDentalOfficeBuilding = 30, "Medical Office"
        Misc = 31
        Motels = 32
        OfficeRetail = 33
        Office = 34
        OfficeAndApartments5To14Units = 35, "Office Apt 5-14 Units"
        OfficeWithMajorRetailUnits = 36, "Office Major Retail"
        ParkingLot = 37
        Schools = 38
        ShoppingCenter = 39
        SingleStructOnMultiLotDFSOnly = 40, "Single Struct Multi Lot"
        TiApartment = 41
        TicBldg4UnitsOrLess = 42
        Theatres = 43
        VacantLot = 44
        VacantLotCommAndInd = 45, "Vacant Lot Comm Ind"
        VacantLotPublicUse = (46,)
        VacantLotResidential = 47, "Vacant Lot Resi"
        VacantLotResidentialWRestriction = 48, "Vacant Lot Resi Restrict"

    class InfraEnum(models.IntegerChoices):
        Yes = 0

    run_date = models.DateField()
    address = models.CharField(max_length=254, null=True, blank=True)
    zip5 = models.IntegerField(null=True, blank=True)
    mapblklot = models.CharField(max_length=254, null=True, blank=True)
    m1_vli = models.FloatField(null=True, blank=True)
    m1_li = models.FloatField(null=True, blank=True)
    m1_m = models.FloatField(null=True, blank=True)
    m1_am = models.FloatField(null=True, blank=True)
    m2_vli = models.FloatField(null=True, blank=True)
    m2_li = models.FloatField(null=True, blank=True)
    m2_m = models.FloatField(null=True, blank=True)
    m2_am = models.FloatField(null=True, blank=True)
    m3_vli = models.FloatField(null=True, blank=True)
    m3_li = models.FloatField(null=True, blank=True)
    m3_m = models.FloatField(null=True, blank=True)
    m3_am = models.FloatField(null=True, blank=True)
    shortfall = models.IntegerField(choices=ShortfallEnum.choices, null=True, blank=True)
    acres = models.FloatField(null=True, blank=True)
    ex_gp_type = models.IntegerField(choices=ExGpTypeEnum.choices, null=True, blank=True)
    ex_zoning = models.IntegerField(choices=ExZoningEnum.choices, null=True, blank=True)
    m1_gp_type = models.IntegerField(choices=GpTypeEnum.choices, null=True, blank=True)
    m2_gp_type = models.IntegerField(choices=GpTypeEnum.choices, null=True, blank=True)
    m3_gp_type = models.IntegerField(choices=GpTypeEnum.choices, null=True, blank=True)
    m1_zoning = models.IntegerField(choices=ZoningEnum.choices, null=True, blank=True)
    m2_zoning = models.IntegerField(choices=ZoningEnum.choices, null=True, blank=True)
    m3_zoning = models.IntegerField(choices=ZoningEnum.choices, null=True, blank=True)
    min_dens = models.FloatField(null=True, blank=True)
    m1_maxdens = models.FloatField(null=True, blank=True)
    m2_maxdens = models.FloatField(null=True, blank=True)
    m3_maxdens = models.FloatField(null=True, blank=True)
    m1_cap = models.FloatField(null=True, blank=True)
    m2_cap = models.FloatField(null=True, blank=True)
    m3_cap = models.FloatField(null=True, blank=True)
    vacant = models.IntegerField(choices=VacantEnum.choices, null=True, blank=True)
    ex_use = models.IntegerField(choices=ExUseEnum.choices, null=True, blank=True)
    infra = models.IntegerField(choices=InfraEnum.choices, null=True, blank=True)
    ss_map1 = models.FloatField(null=True, blank=True)
    ss_map2 = models.FloatField(null=True, blank=True)
    ss_map3 = models.FloatField(null=True, blank=True)

    # def __str__(self):
    #     return f"RawSfHeTableB: {self.address} (parcel = {self.mapblklot})"
