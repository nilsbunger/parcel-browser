
[tool.mypy]
plugins = ["mypy_django_plugin.main"]

[tool.django-stubs]
django_settings_module = "parsnip.settings"

[tool.pytest.ini_options]
addopts = "--nomigrations -rA -vv"
DJANGO_SETTINGS_MODULE = "parsnip.settings"
python_files = ["tests.py", "test_*.py", "*_tests.py"]


[tool.ruff]
# Ruff linter
line-length = 120
target-version = "py311"
ignore-init-module-imports = true

select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "N", # pep8-naming
    "C",  # flake8-comprehensions
    "B",  # flake8-bugbear
    "ANN",  # flake8-annotations
    "UP",  # pyupgrade
    "DTZ",  # flake8-datetimez
    "PL",  # pylint
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
    "F541",  # f-string is missing placeholders
    "PLR0912", # too many branches
    "PLR0913", # too many arguments
    "ANN101", # missing type annotation for self in method
    "ANN102", # Missing type annotation for `cls` in classmethod
    "ANN002", # missing type annotation for *argsx
    "ANN003", # missing type annotation for **kwargs

    # Temporarily ignore (too much work to fix):
    "ANN001", # missing type annotation for function argument
    "ANN201", # Missing return type annotation for public function
    "ANN202", # Missing return type annotation for private function
    "ANN204", # Missing return type annotation for special method
    "ANN205", # Missing return type annotation for staticmethod
    "ANN206", # Missing return type annotation for classmethod
    "PLR2004", # Magic value used in comparison, consider replacing 2 with a constant variable
]

unfixable = [
    "F841",  # Local variable `...` is assigned to but never used - we don't want it to remove the variable.
]

exclude = [
    "migrations",
    "node_modules",
    "archive",
    "vendored",
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401", ]
"attom_data_struct.py" = ["N815"]
"test*.py" = ["F841"]


[tool.black]
# See Black command line options here:
# https://black.readthedocs.io/en/stable/usage_and_configuration/the_basics.html
line-length = 118
target-version = ["py311"]
workers = 4
verbose = false
extend-exclude = ".*migrations/"

[tool.poetry]
name = "parsnip"
version = "0.1.0"
description = ""
authors = ["Nils Bunger <nilsbunger@gmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.11"
django = "^4.2.2"
django-environ = "^0.9.0"
whitenoise = "^6.2.0"
django-extensions = "^3.2.1"
psycopg2 = "^2.9.5"
pydantic = "^1.10.2"
django-vectortiles = "^0.2.0"
django-ninja = "^0.19.1"
boto3 = "^1.25.1"
matplotlib = "^3.6.1"
joblib = "^1.2.0"
gunicorn = "^20.1.0"
requests = "^2.28.1"
scraperapi-sdk = "^0.2.2"
scrapy = "^2.7.0"
shapely = "^1.8.5.post1"
geopandas = "^0.12.0"
authlib = "^1.1.0"
sentry-sdk = "^1.12.1"
django-two-factor-auth = {extras = ["phonenumbers"], version = "^1.14.0"}
django-allauth = "^0.52.0"
pyairtable = "^1.4.0"
mailersend = "^0.5.0"
affine = "^2.4.0"
cligj = "^0.7.2"
click = "^8.1.3"
enum34 = "^1.1.10"
numpy = "^1.24.1"
rasterio = "^1.3.5"
django-ory-auth = "^0.1.3"
rich = "^13.3.1"
beautifulsoup4 = "^4.11.2"
polars = "^0.17.5"
pyarrow = "^11.0.0"
google-api-python-client = "^2.86.0"
google-auth-httplib2 = "^0.1.0"
google-auth-oauthlib = "^1.0.0"
django-sesame = "^3.1"
email-validator = "^2.0.0.post2"
more-itertools = "^9.1.0"

[tool.poetry.group.test.dependencies]
pytest-django = "^4.5.2"
pyyaml = "^6.0"
ruff = "^0.0.260"
black = "^23.3.0"
pytest-mock = "^3.10.0"
responses = "^0.23.1"

[tool.poetry.group.dev.dependencies]
django-silk = "^5.0.1"
locust = "^2.12.2"
black = "~23"
pytest-django = "^4.5.2"
pyyaml = "^6.0"
ruff = "^0.0.260"
tiktoken = "^0.3.3"
django-debug-toolbar = "^4.1.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
